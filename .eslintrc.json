{
  "ignorePatterns": ["**/*"],
  "parserOptions": {
    "ecmaVersion": 6
  },
  "env": {
    "es6": true
  },
  "overrides": [
    {
      "files": ["*.spec.ts", "*.ts"],
      "rules": {
        "no-prototype-builtins": "off"
      },
      "plugins": ["@nx"]
    },
    {
      "files": ["*.spec.ts"],
      "rules": {
        "import/order": "error",
        "prefer-rest-params": "off",
        "@typescript-eslint/no-explicit-any": "off"
      },
      "plugins": ["import", "@typescript-eslint"]
    },
    {
      "files": ["*.ts"],
      "extends": ["plugin:@nx/angular", "plugin:@ngrx/recommended"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "type:app",
                "onlyDependOnLibsWithTags": [
                  "type:features",
                  "type:shared",
                  "type:utils",
                  "type:models"
                ]
              },
              {
                "sourceTag": "type:features",
                "onlyDependOnLibsWithTags": [
                  "type:http-clients",
                  "type:stores",
                  "type:features",
                  "type:models",
                  "type:shared",
                  "type:utils",
                  "type:models",
                  "type:store-actions"
                ]
              },
              {
                "sourceTag": "type:http-clients",
                "onlyDependOnLibsWithTags": [
                  "type:stores",
                  "type:models",
                  "type:enums",
                  "type:mocks",
                  "type:shared",
                  "type:utils"
                ]
              },
              {
                "sourceTag": "type:utils",
                "onlyDependOnLibsWithTags": ["*"]
              },
              {
                "sourceTag": "type:models",
                "onlyDependOnLibsWithTags": ["type:models", "type:enums", "type:shared"]
              },
              {
                "sourceTag": "type:shared",
                "onlyDependOnLibsWithTags": [
                  "type:models",
                  "type:mocks",
                  "type:features",
                  "type:shared",
                  "type:stores",
                  "type:utils"
                ]
              },
              {
                "sourceTag": "type:store-actions",
                "onlyDependOnLibsWithTags": ["type:models"]
              },
              {
                "sourceTag": "type:stores",
                "onlyDependOnLibsWithTags": [
                  "type:models",
                  "type:shared",
                  "type:http-clients",
                  "type:utils",
                  "type:mocks",
                  "type:store-actions",
                  "type:data-access",
                  "type:stores"
                ]
              }
            ]
          }
        ],
        "@angular-eslint/no-empty-lifecycle-method": "warn",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@ngrx/no-multiple-actions-in-effects": "warn",
        "@ngrx/no-dispatch-in-effects": "warn",
        "@ngrx/no-store-subscription": "error",
        "@ngrx/prefer-selector-in-select": "error",
        "@ngrx/use-consistent-global-store-name": "error",
        "@ngrx/prefer-effect-callback-in-block-statement": "off",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "off",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": "never"
            }
          }
        ],
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-inferrable-types": [
          "off",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/unified-signatures": "error",
        "@stylistic/quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "arrow-body-style": "error",
        "constructor-super": "error",
        "curly": "error",
        "eqeqeq": ["error", "smart"],
        "guard-for-in": "error",
        "id-blacklist": "off",
        "id-match": "off",
        "import/no-deprecated": "warn",
        "import/order": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-console": [
          "error",
          {
            "allow": [
              "log",
              "warn",
              "dir",
              "timeLog",
              "assert",
              "clear",
              "count",
              "countReset",
              "group",
              "groupEnd",
              "table",
              "dirxml",
              "error",
              "groupCollapsed",
              "Console",
              "profile",
              "profileEnd",
              "timeStamp",
              "context"
            ]
          }
        ],
        "no-debugger": "error",
        "no-empty": "off",
        "no-eval": "error",
        "no-extra-bind": "warn",
        "no-fallthrough": "error",
        "no-new-wrappers": "error",
        "no-restricted-imports": ["error", "rxjs/Rx"],
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unsafe-optional-chaining": "warn",
        "no-unused-labels": "error",
        "no-useless-escape": "off",
        "no-var": "error",
        "prefer-const": "off",
        "spaced-comment": "off",
        "radix": "error",
        "rxjs/no-internal": "error",
        "rxjs/no-subject-unsubscribe": "error",
        "rxjs/no-unsafe-takeuntil": "error"
      },
      "plugins": [
        "@nx",
        "@angular-eslint",
        "@ngrx",
        "@typescript-eslint",
        "@stylistic",
        "import",
        "rxjs"
      ]
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@nx/angular-template"],
      "rules": {
        "@angular-eslint/template/no-negated-async": "off"
      },
      "plugins": ["@nx", "html", "@angular-eslint/template"]
    },
    {
      "files": ["*.component.ts"],
      "extends": ["plugin:@angular-eslint/template/process-inline-templates"],
      "plugins": ["@angular-eslint/template"]
    }
  ],
  "extends": ["./.eslintrc.base.json"]
}
