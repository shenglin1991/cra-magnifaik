"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeOptions = void 0;
const devkit_1 = require("@nx/devkit");
const project_name_and_root_utils_1 = require("@nx/devkit/src/generators/project-name-and-root-utils");
const eslint_1 = require("@nx/eslint");
const test_runners_1 = require("../../../utils/test-runners");
const version_utils_1 = require("../../utils/version-utils");
async function normalizeOptions(host, options) {
    const { projectName: appProjectName, projectRoot: appProjectRoot, projectNameAndRootFormat, } = await (0, project_name_and_root_utils_1.determineProjectNameAndRootOptions)(host, {
        name: options.name,
        projectType: 'application',
        directory: options.directory,
        projectNameAndRootFormat: options.projectNameAndRootFormat,
        rootProject: options.rootProject,
        callingGenerator: '@nx/angular:application',
    });
    options.rootProject = appProjectRoot === '.';
    options.projectNameAndRootFormat = projectNameAndRootFormat;
    const nxJson = (0, devkit_1.readNxJson)(host);
    let e2eWebServerTarget = 'serve';
    let e2ePort = options.port ?? 4200;
    if (nxJson.targetDefaults?.[e2eWebServerTarget] &&
        (nxJson.targetDefaults?.[e2eWebServerTarget].options?.port ||
            nxJson.targetDefaults?.[e2eWebServerTarget].options?.env?.PORT)) {
        e2ePort =
            nxJson.targetDefaults?.[e2eWebServerTarget].options?.port ||
                nxJson.targetDefaults?.[e2eWebServerTarget].options?.env?.PORT;
    }
    const e2eProjectName = options.rootProject ? 'e2e' : `${appProjectName}-e2e`;
    const e2eProjectRoot = options.rootProject ? 'e2e' : `${appProjectRoot}-e2e`;
    const e2eWebServerAddress = `http://localhost:${e2ePort}`;
    const parsedTags = options.tags
        ? options.tags.split(',').map((s) => s.trim())
        : [];
    let bundler = options.bundler;
    if (!bundler) {
        const { major: angularMajorVersion } = (0, version_utils_1.getInstalledAngularVersionInfo)(host);
        bundler = angularMajorVersion >= 17 ? 'esbuild' : 'webpack';
    }
    // Set defaults and then overwrite with user options
    return {
        style: 'css',
        routing: true,
        inlineStyle: false,
        inlineTemplate: false,
        skipTests: options.unitTestRunner === test_runners_1.UnitTestRunner.None,
        skipFormat: false,
        unitTestRunner: test_runners_1.UnitTestRunner.Jest,
        e2eTestRunner: test_runners_1.E2eTestRunner.Playwright,
        linter: eslint_1.Linter.EsLint,
        strict: true,
        standalone: true,
        ...options,
        prefix: options.prefix || 'app',
        name: appProjectName,
        appProjectRoot,
        appProjectSourceRoot: `${appProjectRoot}/src`,
        e2eProjectRoot,
        e2eProjectName,
        e2eWebServerAddress,
        e2eWebServerTarget,
        e2ePort,
        parsedTags,
        bundler,
        outputPath: (0, devkit_1.joinPathFragments)('dist', !options.rootProject ? appProjectRoot : appProjectName),
        ssr: options.ssr ?? false,
    };
}
exports.normalizeOptions = normalizeOptions;
